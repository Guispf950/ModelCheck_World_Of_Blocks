MODULE main

DEFINE 
    -- Tamanhos dos blocos conforme especificação
    size_a := 1;
    size_b := 1;
    size_c := 2;
    size_d := 3;

VAR
    -- Posições dos blocos (x,y) - campo 0..5
    pos_a_x: 0..6; pos_a_y: 0..3;
    pos_b_x: 0..6; pos_b_y: 0..3;  
    pos_c_x: 0..6; pos_c_y: 0..3;
    pos_d_x: 0..6; pos_d_y: 0..3;

IVAR
    action: {none, move_a, move_b, move_c, move_d};
    target_x: 0..6;
    target_y: 0..3;

DEFINE
    -- Predicados para blocos livres (sem nada em cima)
    is_clear_a := (pos_b_y != pos_a_y + 1 | (pos_b_x >= pos_a_x + size_a | pos_b_x + size_b <= pos_a_x)) &
                  (pos_c_y != pos_a_y + 1 | (pos_c_x >= pos_a_x + size_a | pos_c_x + size_c <= pos_a_x)) &
                  (pos_d_y != pos_a_y + 1 | (pos_d_x >= pos_a_x + size_a | pos_d_x + size_d <= pos_a_x));
                  
    is_clear_b := (pos_a_y != pos_b_y + 1 | (pos_a_x >= pos_b_x + size_b | pos_a_x + size_a <= pos_b_x)) &
                  (pos_c_y != pos_b_y + 1 | (pos_c_x >= pos_b_x + size_b | pos_c_x + size_c <= pos_b_x)) &
                  (pos_d_y != pos_b_y + 1 | (pos_d_x >= pos_b_x + size_b | pos_d_x + size_d <= pos_b_x));
                  
    is_clear_c := (pos_a_y != pos_c_y + 1 | (pos_a_x >= pos_c_x + size_c | pos_a_x + size_a <= pos_c_x)) &
                  (pos_b_y != pos_c_y + 1 | (pos_b_x >= pos_c_x + size_c | pos_b_x + size_b <= pos_c_x)) &
                  (pos_d_y != pos_c_y + 1 | (pos_d_x >= pos_c_x + size_c | pos_d_x + size_d <= pos_c_x));
                  
    is_clear_d := (pos_a_y != pos_d_y + 1 | (pos_a_x >= pos_d_x + size_d | pos_a_x + size_a <= pos_d_x)) &
                  (pos_b_y != pos_d_y + 1 | (pos_b_x >= pos_d_x + size_d | pos_b_x + size_b <= pos_d_x)) &
                  (pos_c_y != pos_d_y + 1 | (pos_c_x >= pos_d_x + size_d | pos_c_x + size_c <= pos_d_x));

ASSIGN
    -- Estado inicial S0 CORRETO da especificação:
    -- a: (3,0) sobre o plano, b: (5,0) sobre o plano, c: (0,0) sobre o plano, d: (3,1) sobre a
    init(pos_a_x) := 3; init(pos_a_y) := 0;
    init(pos_b_x) := 5; init(pos_b_y) := 0;
    init(pos_c_x) := 0; init(pos_c_y) := 0;
    init(pos_d_x) := 3; init(pos_d_y) := 1;

    -- Transições simplificadas SEM restrições de estabilidade incorretas
    next(pos_a_x) := case
        action = move_a & is_clear_a &
            (pos_b_y != target_y | ((target_x + size_a <= pos_b_x) | (target_x >= pos_b_x + size_b))) &
            (pos_c_y != target_y | ((target_x + size_a <= pos_c_x) | (target_x >= pos_c_x + size_c))) &
            (pos_d_y != target_y | ((target_x + size_a <= pos_d_x) | (target_x >= pos_d_x + size_d))) &
            (
                target_y = 0 |
                (target_y > 0 & (
                    (pos_b_y = target_y - 1) | (pos_c_y = target_y - 1) | (pos_d_y = target_y - 1)
                ))
            ) & target_x + size_a <= 6 : target_x;
        TRUE: pos_a_x;
    esac;
    next(pos_a_y) := case next(pos_a_x) != pos_a_x : target_y; TRUE: pos_a_y; esac;

    next(pos_b_x) := case
        action = move_b & is_clear_b &
            (pos_a_y != target_y | ((target_x + size_b <= pos_a_x) | (target_x >= pos_a_x + size_a))) &
            (pos_c_y != target_y | ((target_x + size_b <= pos_c_x) | (target_x >= pos_c_x + size_c))) &
            (pos_d_y != target_y | ((target_x + size_b <= pos_d_x) | (target_x >= pos_d_x + size_d))) &
            (
                target_y = 0 |
                (target_y > 0 & (
                    (pos_a_y = target_y - 1) | (pos_c_y = target_y - 1) | (pos_d_y = target_y - 1)
                ))
            ) & target_x + size_b <= 6 : target_x;
        TRUE: pos_b_x;
    esac;
    next(pos_b_y) := case next(pos_b_x) != pos_b_x : target_y; TRUE: pos_b_y; esac;

    next(pos_c_x) := case
        action = move_c & is_clear_c &
            (pos_a_y != target_y | ((target_x + size_c <= pos_a_x) | (target_x >= pos_a_x + size_a))) &
            (pos_b_y != target_y | ((target_x + size_c <= pos_b_x) | (target_x >= pos_b_x + size_b))) &
            (pos_d_y != target_y | ((target_x + size_c <= pos_d_x) | (target_x >= pos_d_x + size_d))) &
            (
                target_y = 0 |
                (target_y > 0 & (
                    (pos_a_y = target_y - 1) | (pos_b_y = target_y - 1) | (pos_d_y = target_y - 1)
                ))
            ) & target_x + size_c <= 6 : target_x;
        TRUE: pos_c_x;
    esac;
    next(pos_c_y) := case next(pos_c_x) != pos_c_x : target_y; TRUE: pos_c_y; esac;
    
    next(pos_d_x) := case
        action = move_d & is_clear_d &
            (pos_a_y != target_y | ((target_x + size_d <= pos_a_x) | (target_x >= pos_a_x + size_a))) &
            (pos_b_y != target_y | ((target_x + size_d <= pos_b_x) | (target_x >= pos_b_x + size_b))) &
            (pos_c_y != target_y | ((target_x + size_d <= pos_c_x) | (target_x >= pos_c_x + size_c))) &
            (
                target_y = 0 |
                (target_y > 0 & (
                    (pos_a_y = target_y - 1) | (pos_b_y = target_y - 1) | (pos_c_y = target_y - 1)
                ))
            ) & target_x + size_d <= 6 : target_x;
        TRUE: pos_d_x;
    esac;
    next(pos_d_y) := case next(pos_d_x) != pos_d_x : target_y; TRUE: pos_d_y; esac;

DEFINE
    -- Estado Objetivo S7 CORRETO: a(0,1) sobre c, b(1,1) sobre c, c(0,0) no plano, d(3,0) no plano
    goal := (pos_a_x = 0) & (pos_a_y = 1) &  -- a sobre c
            (pos_b_x = 1) & (pos_b_y = 1) &  -- b sobre c 
            (pos_c_x = 0) & (pos_c_y = 0) &  -- c no plano
            (pos_d_x = 3) & (pos_d_y = 0);   -- d no plano em (3,0)

CTLSPEC
    !EF(goal)