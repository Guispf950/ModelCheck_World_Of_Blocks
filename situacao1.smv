MODULE main

-- =============================================================
-- PARTE 1: DEFINIÇÕES ESTÁTICAS E DE ESTADO
-- =============================================================
DEFINE
    size_a := 1;
    size_b := 1;
    size_c := 2;
    size_d := 3;

VAR
    pos_a_x: 0..6; pos_a_y: 0..3;
    pos_b_x: 0..6; pos_b_y: 0..3;
    pos_c_x: 0..6; pos_c_y: 0..3;
    pos_d_x: 0..6; pos_d_y: 0..3;

IVAR
    action: { none, move_a, move_b, move_c, move_d };
    target_x: 0..6;
    target_y: 0..3;

-- =============================================================
-- PARTE 2: PREDICADOS AUXILIARES (APENAS COM VARs)
-- =============================================================
DEFINE
    is_a_on_b := (pos_a_y = pos_b_y + 1) & !((pos_a_x + size_a <= pos_b_x) | (pos_a_x >= pos_b_x + size_b));
    is_a_on_c := (pos_a_y = pos_c_y + 1) & !((pos_a_x + size_a <= pos_c_x) | (pos_a_x >= pos_c_x + size_c));
    is_a_on_d := (pos_a_y = pos_d_y + 1) & !((pos_a_x + size_a <= pos_d_x) | (pos_a_x >= pos_d_x + size_d));
    is_b_on_a := (pos_b_y = pos_a_y + 1) & !((pos_b_x + size_b <= pos_a_x) | (pos_b_x >= pos_a_x + size_a));
    is_b_on_c := (pos_b_y = pos_c_y + 1) & !((pos_b_x + size_b <= pos_c_x) | (pos_b_x >= pos_c_x + size_c));
    is_b_on_d := (pos_b_y = pos_d_y + 1) & !((pos_b_x + size_b <= pos_d_x) | (pos_b_x >= pos_d_x + size_d));
    is_c_on_a := (pos_c_y = pos_a_y + 1) & !((pos_c_x + size_c <= pos_a_x) | (pos_c_x >= pos_a_x + size_a));
    is_c_on_b := (pos_c_y = pos_b_y + 1) & !((pos_c_x + size_c <= pos_b_x) | (pos_c_x >= pos_b_x + size_b));
    is_c_on_d := (pos_c_y = pos_d_y + 1) & !((pos_c_x + size_c <= pos_d_x) | (pos_c_x >= pos_d_x + size_d));
    is_d_on_a := (pos_d_y = pos_a_y + 1) & !((pos_d_x + size_d <= pos_a_x) | (pos_d_x >= pos_a_x + size_a));
    is_d_on_b := (pos_d_y = pos_b_y + 1) & !((pos_d_x + size_d <= pos_b_x) | (pos_d_x >= pos_b_x + size_b));
    is_d_on_c := (pos_d_y = pos_c_y + 1) & !((pos_d_x + size_d <= pos_c_x) | (pos_d_x >= pos_c_x + size_c));

    is_clear_a := !(is_b_on_a | is_c_on_a | is_d_on_a);
    is_clear_b := !(is_a_on_b | is_c_on_b | is_d_on_b);
    is_clear_c := !(is_a_on_c | is_b_on_c | is_d_on_c);
    is_clear_d := !(is_a_on_d | is_b_on_d | is_c_on_d);

-- =============================================================
-- PARTE 3: LÓGICA DE TRANSIÇÃO E ESPECIFICAÇÃO
-- =============================================================
ASSIGN
    -- Estado inicial S0 da Situação 1 (conforme diagramas originais)
    -- a:(3,0), b:(5,0), c:(0,0), d:(3,1) - d sobre a&b mesmo com gap
    init(pos_a_x) := 3; init(pos_a_y) := 0;  -- a: (3,0) sobre o plano
    init(pos_b_x) := 5; init(pos_b_y) := 0;  -- b: (5,0) sobre o plano 
    init(pos_c_x) := 0; init(pos_c_y) := 0;  -- c: (0,0) sobre o plano
    init(pos_d_x) := 3; init(pos_d_y) := 1;  -- d: (3,1) sobre a & b (permitindo gap)

    next(pos_a_x) := case
        action = move_a & is_clear_a &
            (pos_b_y != target_y | ((target_x + size_a <= pos_b_x) | (target_x >= pos_b_x + size_b))) &
            (pos_c_y != target_y | ((target_x + size_a <= pos_c_x) | (target_x >= pos_c_x + size_c))) &
            (pos_d_y != target_y | ((target_x + size_a <= pos_d_x) | (target_x >= pos_d_x + size_d))) &
            (
                target_y = 0 |
                (target_y > 0 & (
                    (pos_b_y = target_y - 1) | (pos_c_y = target_y - 1) | (pos_d_y = target_y - 1)
                ))
            ) & target_x + size_a <= 6 : target_x;
        TRUE: pos_a_x;
    esac;
    next(pos_a_y) := case next(pos_a_x) != pos_a_x : target_y; TRUE: pos_a_y; esac;

    next(pos_b_x) := case
        action = move_b & is_clear_b &
            (pos_a_y != target_y | ((target_x + size_b <= pos_a_x) | (target_x >= pos_a_x + size_a))) &
            (pos_c_y != target_y | ((target_x + size_b <= pos_c_x) | (target_x >= pos_c_x + size_c))) &
            (pos_d_y != target_y | ((target_x + size_b <= pos_d_x) | (target_x >= pos_d_x + size_d))) &
            (
                target_y = 0 |
                (target_y > 0 & (
                    (pos_a_y = target_y - 1) | (pos_c_y = target_y - 1) | (pos_d_y = target_y - 1)
                ))
            ) & target_x + size_b <= 6 : target_x;
        TRUE: pos_b_x;
    esac;
    next(pos_b_y) := case next(pos_b_x) != pos_b_x : target_y; TRUE: pos_b_y; esac;

    next(pos_c_x) := case
        action = move_c & is_clear_c &
            (pos_a_y != target_y | ((target_x + size_c <= pos_a_x) | (target_x >= pos_a_x + size_a))) &
            (pos_b_y != target_y | ((target_x + size_c <= pos_b_x) | (target_x >= pos_b_x + size_b))) &
            (pos_d_y != target_y | ((target_x + size_c <= pos_d_x) | (target_x >= pos_d_x + size_d))) &
            (
                target_y = 0 |
                (target_y > 0 & (
                    (pos_a_y = target_y - 1) | (pos_b_y = target_y - 1) | (pos_d_y = target_y - 1)
                ))
            ) & target_x + size_c <= 6 : target_x;
        TRUE: pos_c_x;
    esac;
    next(pos_c_y) := case next(pos_c_x) != pos_c_x : target_y; TRUE: pos_c_y; esac;
    
    next(pos_d_x) := case
        action = move_d & is_clear_d &
            (pos_a_y != target_y | ((target_x + size_d <= pos_a_x) | (target_x >= pos_a_x + size_a))) &
            (pos_b_y != target_y | ((target_x + size_d <= pos_b_x) | (target_x >= pos_b_x + size_b))) &
            (pos_c_y != target_y | ((target_x + size_d <= pos_c_x) | (target_x >= pos_c_x + size_c))) &
            (
                target_y = 0 |
                (target_y > 0 & (
                    (pos_a_y = target_y - 1) | (pos_b_y = target_y - 1) | (pos_c_y = target_y - 1)
                ))
            ) & target_x + size_d <= 6 : target_x;
        TRUE: pos_d_x;
    esac;
    next(pos_d_y) := case next(pos_d_x) != pos_d_x : target_y; TRUE: pos_d_y; esac;

DEFINE
    -- ====================== GOALS DA SITUAÇÃO 1 ======================
    
    -- SF1: a:(4,1) sobre d, b:(5,1) sobre d, c:(4,2) sobre a&b, d:(3,0) no plano
    goal_SF1 := (pos_a_x = 4) & (pos_a_y = 1) &  -- a sobre d
                (pos_b_x = 5) & (pos_b_y = 1) &  -- b sobre d
                (pos_c_x = 4) & (pos_c_y = 2) &  -- c sobre a&b
                (pos_d_x = 3) & (pos_d_y = 0);   -- d no plano

    -- SF2: a:(4,2) sobre c, b:(5,2) sobre c, c:(4,1) sobre d, d:(3,0) no plano
    goal_SF2 := (pos_a_x = 4) & (pos_a_y = 2) &  -- a sobre c
                (pos_b_x = 5) & (pos_b_y = 2) &  -- b sobre c
                (pos_c_x = 4) & (pos_c_y = 1) &  -- c sobre d
                (pos_d_x = 3) & (pos_d_y = 0);   -- d no plano

    -- SF3: a:(2,0) no plano, b:(5,0) no plano, c:(0,0) no plano, d:(0,1) sobre c&a
    goal_SF3 := (pos_a_x = 2) & (pos_a_y = 0) &  -- a no plano
                (pos_b_x = 5) & (pos_b_y = 0) &  -- b no plano
                (pos_c_x = 0) & (pos_c_y = 0) &  -- c no plano
                (pos_d_x = 0) & (pos_d_y = 1);   -- d sobre c&a

    -- SF4: a:(0,1) sobre c, b:(5,0) no plano, c:(0,0) no plano, d:(2,0) no plano
    goal_SF4 := (pos_a_x = 0) & (pos_a_y = 1) &  -- a sobre c
                (pos_b_x = 5) & (pos_b_y = 0) &  -- b no plano
                (pos_c_x = 0) & (pos_c_y = 0) &  -- c no plano
                (pos_d_x = 2) & (pos_d_y = 0);   -- d no plano

    -- Goal ativo (descomenta apenas UM por vez para testar)
    -- goal := goal_SF1;  -- TESTANDO SF1 ✅ RESOLVIDO (7 passos)
    -- goal := goal_SF2;  -- TESTANDO SF2 ✅ RESOLVIDO (7 passos)
    -- goal := goal_SF3;  -- TESTANDO SF3 ✅ RESOLVIDO (3 passos)
    goal := goal_SF4;  -- TESTANDO SF4

CTLSPEC
    !EF(goal);